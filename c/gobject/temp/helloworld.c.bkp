/* -*-coding: utf8;-*- */
/* helloworld.c - traditional gtk+ helloworld program */
/* Compile as : "gcc `pkg-config --cflags gtk+-3.0` `pkg-config --libs gtk+-3.0` -o helloworld helloworld.c" */

#include <gtk/gtk.h>

void hello(GtkWidget *widget, gpointer data){
	g_print("Hello World!\n");
}

gint delete_event(GtkWidget *widget, GdkEvent event, gpointer data){
	// When this function returns a false value, the delete event signal becomes a destroy signal 
	return FALSE;
}

void end_program(GtkWidget *widget, gpointer data){
	// End main loop
	gtk_main_quit();
}

int main(int argc, char *argv[])
{
	GtkWindow *window;
	GtkButton *button;
	gtk_init(&argc, &argv);
	window = g_object_new(GTK_TYPE_WINDOW, 
		"default-height", 200,
		"default-width", 200,
		"border-width", 12,
		"title", "helloworld",
		"window-position", GTK_WIN_POS_MOUSE,
		NULL);
	g_signal_connect(window, 
		"delete-event", G_CALLBACK(delete_event),
		NULL);
	g_signal_connect(window,
		"destroy", G_CALLBACK(end_program),
		NULL);
	button = g_object_new(GTK_TYPE_BUTTON,
		"label", "Hello World!\n **CLICK**",
		"use-underline", TRUE,
		NULL);
	g_signal_connect(button,
		"clicked", G_CALLBACK(hello),
		NULL);
	g_signal_connect_swapped(button, 
		"clicked", G_CALLBACK(gtk_widget_destroy),
		window);
	gtk_container_add(GTK_CONTAINER(window), GTK_WIDGET(button));
	gtk_widget_show_all(GTK_WIDGET(window));
	gtk_main();
	return 0;
}
